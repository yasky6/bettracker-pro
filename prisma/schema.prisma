// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?   // For email/password auth
  plan          Plan      @default(FREE)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  bets     Bet[]
  settings UserSettings?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application models
model Bet {
  id        String    @id @default(cuid())
  userId    String
  sport     String
  team      String
  opponent  String
  betType   BetType
  odds      Float
  stake     Float
  result    BetResult?
  payout    Float?
  date      DateTime
  notes     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([date])
  @@index([sport])
}

model UserSettings {
  id                    String  @id @default(cuid())
  userId                String  @unique
  defaultStake          Float   @default(25)
  currency              String  @default("USD")
  timezone              String  @default("America/New_York")
  emailNotifications    Boolean @default(true)
  pushNotifications     Boolean @default(false)
  darkMode              Boolean @default(true)
  autoBackup            Boolean @default(true)
  shareAnalytics        Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Enums
enum Plan {
  FREE
  PRO
  PREMIUM
}

enum BetType {
  MONEYLINE
  SPREAD
  OVER_UNDER
  PROP
}

enum BetResult {
  WIN
  LOSS
  PUSH
}
